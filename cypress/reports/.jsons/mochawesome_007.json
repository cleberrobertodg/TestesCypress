{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2025-01-06T15:46:22.830Z",
    "end": "2025-01-06T15:46:53.060Z",
    "duration": 30230,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2303c7c5-760f-4e5e-9a8c-f1dd665904eb",
      "title": "",
      "fullFile": "cypress/integration/PagMenosCriaçãoDeUsuario.spec.js",
      "file": "cypress/integration/PagMenosCriaçãoDeUsuario.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e1c3b9a9-e7fa-469c-92b5-d2af84908c18",
          "title": "Criação de usuário PagMenos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Valida se o form aceita campos preenchidos em formato inválido, e se retorna mensagens de erro",
              "fullTitle": "Criação de usuário PagMenos Valida se o form aceita campos preenchidos em formato inválido, e se retorna mensagens de erro",
              "timedOut": null,
              "duration": 13169,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.log('Valida se o form aceita campos preenchidos em formato inválido, e se retorna mensagens de erro');\ncy.get('body > div.enc--wrapper > div.info-cookies > div > div > div > div:nth-child(2) > div > button').click();\ncy.get('#nav-collapse > ul > div > div > ul > li > a').click();\ncy.get('#novo_cpf').type('srgtewrgt'); //preenche cpf errado\ncy.get('#input-cpf-live-feedback > span').should('be.visible').contains('O campo CPF é obrigatório'); //verifica msg de erro\ncy.get('#novo_cpf').type(_variables.randomCPF); //insere cpf válido\ncy.get('[type=\"submit\"]').contains('Enviar').click({\n  force: true\n}); //clica em enviar\ncy.wait(500);\ncy.get('#part_cpf').clear(); //apaga campo de cpf\ncy.get('[class=\"error-form invalid-feedback\"]').should('be.visible'); //valida se aparece msg de erro no preenchimento\ncy.get('#part_cpf').type('abcdefg', {\n  force: true\n}); //escreve string no cpf\ncy.get('[class=\"error-form invalid-feedback\"]').should('be.visible'); //valida se aparece msg de erro no preenchimento\ncy.get('#part_nome').type('@@@', {\n  force: true\n}).clear().type('12345', {\n  force: true\n});\ncy.get('[class=\"error-form invalid-feedback\"]').should('be.visible'); //valida se aparece msg de erro no preenchimento\ncy.get('#part_sobrenome').type('@@@', {\n  force: true\n}).clear().type('12345', {\n  force: true\n});\ncy.get('[class=\"error-form invalid-feedback\"]').should('be.visible'); //valida se aparece msg de erro no preenchimento\ncy.get('#part_data_nascimento').type('@@@', {\n  force: true\n}).clear().type('acbkh', {\n  force: true\n}).clear().type('01011000', {\n  force: true\n}).clear().type('31313500', {\n  force: true\n}); //escreve datas de nascimento inválidas\ncy.get('[class=\"error-form invalid-feedback\"]').should('be.visible'); //valida se aparece msg de erro no preenchimento\ncy.get('#part_telefone1').type('@@@', {\n  force: true\n}).clear().type('asdcgg', {\n  force: true\n});\ncy.get('[class=\"error-form invalid-feedback\"]').should('be.visible'); //valida se aparece msg de erro no preenchimento\ncy.get('#email').type('@@@', {\n  force: true\n}).clear().type('12345', {\n  force: true\n}).clear().type('cleber.com@email', {\n  force: true\n});\ncy.get('[class=\"error-form invalid-feedback\"]').should('be.visible'); //valida se aparece msg de erro no preenchimento\ncy.get('#email_confirmation').type('@@@', {\n  force: true\n}).clear().type('12345', {\n  force: true\n}).clear().type('cleber.com@email', {\n  force: true\n});\ncy.get('[class=\"error-form invalid-feedback\"]').should('be.visible'); //valida se aparece msg de erro no preenchimento\ncy.get('#part_cep').type('wergaefgaeg', {\n  force: true\n}); //escreve cep inválido com strings\ncy.get('[class=\"error-form invalid-feedback\"]').should('be.visible'); //valida se aparece msg de erro no preenchimento\ncy.get('#part_cep').type('99999999', {\n  force: true\n}); //escreve cep inválido somente com 9999\ncy.contains('button', 'Buscar').click(); //clica em buscar cep\ncy.get('#page--cadastro > div > div.wrapper-cadastro-body.mt-4 > form > div:nth-child(3) > div:nth-child(1) > div > div > div.error-form.error-back').should('be.visible'); //valida se aparece msg de erro no preenchimento\ncy.wait(500);\ncy.get('#part_endereco').clear({\n  force: true\n}).type('@@@@', {\n  force: true\n}); //escreve nome de rua inválido\ncy.get('#part_numero').type('asdfghj', {\n  force: true\n}); //escreve número inválido com strings\ncy.get('[class=\"error-form invalid-feedback\"]').should('be.visible'); //valida se aparece msg de erro no preenchimento\ncy.get('#password').type('asdfghj', {\n  force: true\n}); //digita senha fora do padrão\ncy.get('[class=\"error-form invalid-feedback\"]').should('be.visible'); //valida se aparece msg de erro no preenchimento\ncy.get('#password_confirmation').type('1223456', {\n  force: true\n}); //digita senha fora do padrão\ncy.get('[class=\"error-form invalid-feedback\"]').should('be.visible'); //valida se aparece msg de erro no preenchimento\ncy.wait(500);\ncy.get('#part_regulamento').check({\n  force: true\n}); //aceite de termos\ncy.get('[type=\"submit\"]').contains('Enviar').click({\n  force: true\n}); //clica em enviar\n// cy.wait(10000)",
              "err": {
                "message": "CypressError: Timed out retrying after 4000ms: `cy.type()` failed because this element:\n\n`<input data-v-a35b61ec=\"\" id=\"novo_cpf\" name=\"novo_cpf\" type=\"text\" placeholder=\"*CPF\" autocomplete=\"off\" class=\"form-control is-valid\" aria-describedby=\"input-cpf-new-feedback\" data-vv-as=\"CPF\">`\n\nis being covered by another element:\n\n`<li data-v-ddfa5fc8=\"\" class=\"nav-item\">...</li>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying after 4000ms: `cy.type()` failed because this element:\n\n`<input data-v-a35b61ec=\"\" id=\"novo_cpf\" name=\"novo_cpf\" type=\"text\" placeholder=\"*CPF\" autocomplete=\"off\" class=\"form-control is-valid\" aria-describedby=\"input-cpf-new-feedback\" data-vv-as=\"CPF\">`\n\nis being covered by another element:\n\n`<li data-v-ddfa5fc8=\"\" class=\"nav-item\">...</li>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at $Cy.ensureDescendents (https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:164036:78)\n    at ensureDescendents (https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:150250:8)\n    at ensureDescendentsAndScroll (https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:150257:14)\n    at ensureElIsNotCovered (https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:150389:5)\n    at runAllChecks (https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:150579:52)\n    at retryActionability (https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:150603:16)\n    at tryCatcher (https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:13022:23)\n    at Function.Promise.attempt.Promise.try (https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:10296:29)\n    at whenStable (https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:168760:63)\n    at https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:168257:14\n    at tryCatcher (https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:11139:18)\n    at Promise._fulfill (https://homologd.encinterativa.com.br/__cypress/runner/cypress_runner.js:11083:18)\nFrom Your Spec Code:\n    at Context.eval (https://homologd.encinterativa.com.br/__cypress/tests?p=cypress\\integration\\PagMenosCria%25C3%25A7%25C3%25A3oDeUsuario.spec.js:115:25)",
                "diff": null
              },
              "uuid": "f3944560-b60e-4506-9178-1b4af0013b35",
              "parentUUID": "e1c3b9a9-e7fa-469c-92b5-d2af84908c18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Inscreve corretamente o participante",
              "fullTitle": "Criação de usuário PagMenos Inscreve corretamente o participante",
              "timedOut": null,
              "duration": 15524,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('body > div.enc--wrapper > div.info-cookies > div > div > div > div:nth-child(2) > div > button').click();\ncy.get('#nav-collapse > ul > div > div > ul > li > a').click();\ncy.get('#novo_cpf').type(_variables.randomCPF, {\n  force: true\n}); //preenche cpf corretamente\ncy.get('[type=\"submit\"]').contains('Enviar').click({\n  force: true\n}); //clica em enviar\ncy.wait(500);\ncy.get('#part_nome').type('Cleber Cypress', {\n  force: true\n}); //escreve nome\n//cy.get('#part_sobrenome').type('Test', {force:true})//escreve sobrenome\ncy.get('#part_data_nascimento').type('12041992', {\n  force: true\n});\ncy.get('#vs1__combobox > div.vs__selected-options > input').click({\n  force: true\n}); //Seleciona Campo Gênero\ncy.get('#vs1__option-0').click({\n  force: true\n}); //Seleciona Gênero Masculino\ncy.get('#part_telefone1').type(_variables.randomPhone, {\n  force: true\n});\ncy.get('#email').type(_variables.email, {\n  force: true\n}); //escreve email correto\ncy.get('#email_confirmation').type(_variables.email, {\n  force: true\n}); //escreve email de confirmação\ncy.get('#part_cep').type('41245-075', {\n  force: true\n}); //escreve cep\ncy.contains('button', 'Buscar').click({\n  force: true\n}); //clica em buscar cep\nCypress.on('uncaught:exception', (err, runnable) => {\n  // returning false here prevents Cypress from\n  // failing the test\n  return false;\n});\ncy.wait(3000);\ncy.get('#part_numero').type('100', {\n  force: true\n}); //escreve número da casa\ncy.get('#password').type('Senha123', {\n  force: true\n}); //digita senha \ncy.get('#password_confirmation').type('Senha123', {\n  force: true\n}); //digita confirmação senha\ncy.wait(500);\ncy.get('#part_regulamento').check({\n  force: true\n}); //aceite de termos\n//cy.get('#part_regulamento_promocao').check({force:true})//aceite política de privacidade\n//cy.get('#part_como_ficou_sabendo > div:nth-child(5) > label').click({force:true})//clica no ícone de como ficou sabendo, opção Google\ncy.get('[type=\"submit\"]').contains('Enviar').click({\n  force: true\n}); //clica em enviar\n//cy.wait(10000)",
              "err": {},
              "uuid": "ca8e724c-d16d-4e58-a86e-a506dc0c1358",
              "parentUUID": "e1c3b9a9-e7fa-469c-92b5-d2af84908c18",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca8e724c-d16d-4e58-a86e-a506dc0c1358"
          ],
          "failures": [
            "f3944560-b60e-4506-9178-1b4af0013b35"
          ],
          "pending": [],
          "skipped": [],
          "duration": 28693,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}